// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BeneficiaryAdded extends ethereum.Event {
  get params(): BeneficiaryAdded__Params {
    return new BeneficiaryAdded__Params(this);
  }
}

export class BeneficiaryAdded__Params {
  _event: BeneficiaryAdded;

  constructor(event: BeneficiaryAdded) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeneficiaryClaim extends ethereum.Event {
  get params(): BeneficiaryClaim__Params {
    return new BeneficiaryClaim__Params(this);
  }
}

export class BeneficiaryClaim__Params {
  _event: BeneficiaryClaim;

  constructor(event: BeneficiaryClaim) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BeneficiaryJoined extends ethereum.Event {
  get params(): BeneficiaryJoined__Params {
    return new BeneficiaryJoined__Params(this);
  }
}

export class BeneficiaryJoined__Params {
  _event: BeneficiaryJoined;

  constructor(event: BeneficiaryJoined) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BeneficiaryLocked extends ethereum.Event {
  get params(): BeneficiaryLocked__Params {
    return new BeneficiaryLocked__Params(this);
  }
}

export class BeneficiaryLocked__Params {
  _event: BeneficiaryLocked;

  constructor(event: BeneficiaryLocked) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeneficiaryParamsUpdated extends ethereum.Event {
  get params(): BeneficiaryParamsUpdated__Params {
    return new BeneficiaryParamsUpdated__Params(this);
  }
}

export class BeneficiaryParamsUpdated__Params {
  _event: BeneficiaryParamsUpdated;

  constructor(event: BeneficiaryParamsUpdated) {
    this._event = event;
  }

  get oldClaimAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldMaxClaim(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get oldDecreaseStep(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get oldBaseInterval(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get oldIncrementInterval(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get newClaimAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get newMaxClaim(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get newDecreaseStep(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get newBaseInterval(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get newIncrementInterval(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class BeneficiaryRemoved extends ethereum.Event {
  get params(): BeneficiaryRemoved__Params {
    return new BeneficiaryRemoved__Params(this);
  }
}

export class BeneficiaryRemoved__Params {
  _event: BeneficiaryRemoved;

  constructor(event: BeneficiaryRemoved) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeneficiaryUnlocked extends ethereum.Event {
  get params(): BeneficiaryUnlocked__Params {
    return new BeneficiaryUnlocked__Params(this);
  }
}

export class BeneficiaryUnlocked__Params {
  _event: BeneficiaryUnlocked;

  constructor(event: BeneficiaryUnlocked) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CommunityAdminUpdated extends ethereum.Event {
  get params(): CommunityAdminUpdated__Params {
    return new CommunityAdminUpdated__Params(this);
  }
}

export class CommunityAdminUpdated__Params {
  _event: CommunityAdminUpdated;

  constructor(event: CommunityAdminUpdated) {
    this._event = event;
  }

  get oldCommunityAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newCommunityAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CommunityLocked extends ethereum.Event {
  get params(): CommunityLocked__Params {
    return new CommunityLocked__Params(this);
  }
}

export class CommunityLocked__Params {
  _event: CommunityLocked;

  constructor(event: CommunityLocked) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CommunityParamsUpdated extends ethereum.Event {
  get params(): CommunityParamsUpdated__Params {
    return new CommunityParamsUpdated__Params(this);
  }
}

export class CommunityParamsUpdated__Params {
  _event: CommunityParamsUpdated;

  constructor(event: CommunityParamsUpdated) {
    this._event = event;
  }

  get oldMinTranche(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldMaxTranche(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newMinTranche(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newMaxTranche(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CommunityUnlocked extends ethereum.Event {
  get params(): CommunityUnlocked__Params {
    return new CommunityUnlocked__Params(this);
  }
}

export class CommunityUnlocked__Params {
  _event: CommunityUnlocked;

  constructor(event: CommunityUnlocked) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Donate extends ethereum.Event {
  get params(): Donate__Params {
    return new Donate__Params(this);
  }
}

export class Donate__Params {
  _event: Donate;

  constructor(event: Donate) {
    this._event = event;
  }

  get donor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FundsRequested extends ethereum.Event {
  get params(): FundsRequested__Params {
    return new FundsRequested__Params(this);
  }
}

export class FundsRequested__Params {
  _event: FundsRequested;

  constructor(event: FundsRequested) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ManagerAdded extends ethereum.Event {
  get params(): ManagerAdded__Params {
    return new ManagerAdded__Params(this);
  }
}

export class ManagerAdded__Params {
  _event: ManagerAdded;

  constructor(event: ManagerAdded) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ManagerRemoved extends ethereum.Event {
  get params(): ManagerRemoved__Params {
    return new ManagerRemoved__Params(this);
  }
}

export class ManagerRemoved__Params {
  _event: ManagerRemoved;

  constructor(event: ManagerRemoved) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PreviousCommunityUpdated extends ethereum.Event {
  get params(): PreviousCommunityUpdated__Params {
    return new PreviousCommunityUpdated__Params(this);
  }
}

export class PreviousCommunityUpdated__Params {
  _event: PreviousCommunityUpdated;

  constructor(event: PreviousCommunityUpdated) {
    this._event = event;
  }

  get oldPreviousCommunity(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPreviousCommunity(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TransferERC20 extends ethereum.Event {
  get params(): TransferERC20__Params {
    return new TransferERC20__Params(this);
  }
}

export class TransferERC20__Params {
  _event: TransferERC20;

  constructor(event: TransferERC20) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Community__beneficiariesResult {
  value0: i32;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: i32, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getState(): i32 {
    return this.value0;
  }

  getClaims(): BigInt {
    return this.value1;
  }

  getClaimedAmount(): BigInt {
    return this.value2;
  }

  getLastClaim(): BigInt {
    return this.value3;
  }
}

export class Community extends ethereum.SmartContract {
  static bind(address: Address): Community {
    return new Community("Community", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  _firstBlockTimestamp(): BigInt {
    let result = super.call(
      "_firstBlockTimestamp",
      "_firstBlockTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try__firstBlockTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_firstBlockTimestamp",
      "_firstBlockTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseInterval(): BigInt {
    let result = super.call("baseInterval", "baseInterval():(uint256)", []);

    return result[0].toBigInt();
  }

  try_baseInterval(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("baseInterval", "baseInterval():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  beneficiaries(param0: Address): Community__beneficiariesResult {
    let result = super.call(
      "beneficiaries",
      "beneficiaries(address):(uint8,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Community__beneficiariesResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_beneficiaries(
    param0: Address
  ): ethereum.CallResult<Community__beneficiariesResult> {
    let result = super.tryCall(
      "beneficiaries",
      "beneficiaries(address):(uint8,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Community__beneficiariesResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  beneficiaryListAt(index_: BigInt): Address {
    let result = super.call(
      "beneficiaryListAt",
      "beneficiaryListAt(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(index_)]
    );

    return result[0].toAddress();
  }

  try_beneficiaryListAt(index_: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "beneficiaryListAt",
      "beneficiaryListAt(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(index_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  beneficiaryListLength(): BigInt {
    let result = super.call(
      "beneficiaryListLength",
      "beneficiaryListLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_beneficiaryListLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "beneficiaryListLength",
      "beneficiaryListLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  cUSD(): Address {
    let result = super.call("cUSD", "cUSD():(address)", []);

    return result[0].toAddress();
  }

  try_cUSD(): ethereum.CallResult<Address> {
    let result = super.tryCall("cUSD", "cUSD():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  claimAmount(): BigInt {
    let result = super.call("claimAmount", "claimAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_claimAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("claimAmount", "claimAmount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimCooldown(beneficiaryAddress_: Address): BigInt {
    let result = super.call(
      "claimCooldown",
      "claimCooldown(address):(uint256)",
      [ethereum.Value.fromAddress(beneficiaryAddress_)]
    );

    return result[0].toBigInt();
  }

  try_claimCooldown(beneficiaryAddress_: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimCooldown",
      "claimCooldown(address):(uint256)",
      [ethereum.Value.fromAddress(beneficiaryAddress_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  communityAdmin(): Address {
    let result = super.call("communityAdmin", "communityAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_communityAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "communityAdmin",
      "communityAdmin():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  decreaseStep(): BigInt {
    let result = super.call("decreaseStep", "decreaseStep():(uint256)", []);

    return result[0].toBigInt();
  }

  try_decreaseStep(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("decreaseStep", "decreaseStep():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getInitialMaxClaim(): BigInt {
    let result = super.call(
      "getInitialMaxClaim",
      "getInitialMaxClaim():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getInitialMaxClaim(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getInitialMaxClaim",
      "getInitialMaxClaim():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getVersion(): BigInt {
    let result = super.call("getVersion", "getVersion():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getVersion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getVersion", "getVersion():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  impactMarketAddress(): Address {
    let result = super.call(
      "impactMarketAddress",
      "impactMarketAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_impactMarketAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "impactMarketAddress",
      "impactMarketAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  incrementInterval(): BigInt {
    let result = super.call(
      "incrementInterval",
      "incrementInterval():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_incrementInterval(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "incrementInterval",
      "incrementInterval():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lastInterval(beneficiaryAddress_: Address): BigInt {
    let result = super.call("lastInterval", "lastInterval(address):(uint256)", [
      ethereum.Value.fromAddress(beneficiaryAddress_)
    ]);

    return result[0].toBigInt();
  }

  try_lastInterval(beneficiaryAddress_: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastInterval",
      "lastInterval(address):(uint256)",
      [ethereum.Value.fromAddress(beneficiaryAddress_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  locked(): boolean {
    let result = super.call("locked", "locked():(bool)", []);

    return result[0].toBoolean();
  }

  try_locked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("locked", "locked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxClaim(): BigInt {
    let result = super.call("maxClaim", "maxClaim():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxClaim(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxClaim", "maxClaim():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxTranche(): BigInt {
    let result = super.call("maxTranche", "maxTranche():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxTranche(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxTranche", "maxTranche():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minTranche(): BigInt {
    let result = super.call("minTranche", "minTranche():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minTranche(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minTranche", "minTranche():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  previousCommunity(): Address {
    let result = super.call(
      "previousCommunity",
      "previousCommunity():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_previousCommunity(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "previousCommunity",
      "previousCommunity():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  privateFunds(): BigInt {
    let result = super.call("privateFunds", "privateFunds():(uint256)", []);

    return result[0].toBigInt();
  }

  try_privateFunds(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("privateFunds", "privateFunds():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  treasuryFunds(): BigInt {
    let result = super.call("treasuryFunds", "treasuryFunds():(uint256)", []);

    return result[0].toBigInt();
  }

  try_treasuryFunds(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "treasuryFunds",
      "treasuryFunds():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  validBeneficiaryCount(): BigInt {
    let result = super.call(
      "validBeneficiaryCount",
      "validBeneficiaryCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_validBeneficiaryCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "validBeneficiaryCount",
      "validBeneficiaryCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddBeneficiaryCall extends ethereum.Call {
  get inputs(): AddBeneficiaryCall__Inputs {
    return new AddBeneficiaryCall__Inputs(this);
  }

  get outputs(): AddBeneficiaryCall__Outputs {
    return new AddBeneficiaryCall__Outputs(this);
  }
}

export class AddBeneficiaryCall__Inputs {
  _call: AddBeneficiaryCall;

  constructor(call: AddBeneficiaryCall) {
    this._call = call;
  }

  get beneficiaryAddress_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddBeneficiaryCall__Outputs {
  _call: AddBeneficiaryCall;

  constructor(call: AddBeneficiaryCall) {
    this._call = call;
  }
}

export class AddManagerCall extends ethereum.Call {
  get inputs(): AddManagerCall__Inputs {
    return new AddManagerCall__Inputs(this);
  }

  get outputs(): AddManagerCall__Outputs {
    return new AddManagerCall__Outputs(this);
  }
}

export class AddManagerCall__Inputs {
  _call: AddManagerCall;

  constructor(call: AddManagerCall) {
    this._call = call;
  }

  get account_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddManagerCall__Outputs {
  _call: AddManagerCall;

  constructor(call: AddManagerCall) {
    this._call = call;
  }
}

export class AddTreasuryFundsCall extends ethereum.Call {
  get inputs(): AddTreasuryFundsCall__Inputs {
    return new AddTreasuryFundsCall__Inputs(this);
  }

  get outputs(): AddTreasuryFundsCall__Outputs {
    return new AddTreasuryFundsCall__Outputs(this);
  }
}

export class AddTreasuryFundsCall__Inputs {
  _call: AddTreasuryFundsCall;

  constructor(call: AddTreasuryFundsCall) {
    this._call = call;
  }

  get amount_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddTreasuryFundsCall__Outputs {
  _call: AddTreasuryFundsCall;

  constructor(call: AddTreasuryFundsCall) {
    this._call = call;
  }
}

export class BeneficiaryJoinFromMigratedCall extends ethereum.Call {
  get inputs(): BeneficiaryJoinFromMigratedCall__Inputs {
    return new BeneficiaryJoinFromMigratedCall__Inputs(this);
  }

  get outputs(): BeneficiaryJoinFromMigratedCall__Outputs {
    return new BeneficiaryJoinFromMigratedCall__Outputs(this);
  }
}

export class BeneficiaryJoinFromMigratedCall__Inputs {
  _call: BeneficiaryJoinFromMigratedCall;

  constructor(call: BeneficiaryJoinFromMigratedCall) {
    this._call = call;
  }
}

export class BeneficiaryJoinFromMigratedCall__Outputs {
  _call: BeneficiaryJoinFromMigratedCall;

  constructor(call: BeneficiaryJoinFromMigratedCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class DonateCall extends ethereum.Call {
  get inputs(): DonateCall__Inputs {
    return new DonateCall__Inputs(this);
  }

  get outputs(): DonateCall__Outputs {
    return new DonateCall__Outputs(this);
  }
}

export class DonateCall__Inputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }

  get sender_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DonateCall__Outputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get managers_(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get claimAmount_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get maxClaim_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get decreaseStep_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get baseInterval_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get incrementInterval_(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get minTranche_(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get maxTranche_(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get previousCommunity_(): Address {
    return this._call.inputValues[8].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class LockBeneficiaryCall extends ethereum.Call {
  get inputs(): LockBeneficiaryCall__Inputs {
    return new LockBeneficiaryCall__Inputs(this);
  }

  get outputs(): LockBeneficiaryCall__Outputs {
    return new LockBeneficiaryCall__Outputs(this);
  }
}

export class LockBeneficiaryCall__Inputs {
  _call: LockBeneficiaryCall;

  constructor(call: LockBeneficiaryCall) {
    this._call = call;
  }

  get beneficiaryAddress_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LockBeneficiaryCall__Outputs {
  _call: LockBeneficiaryCall;

  constructor(call: LockBeneficiaryCall) {
    this._call = call;
  }
}

export class RemoveBeneficiaryCall extends ethereum.Call {
  get inputs(): RemoveBeneficiaryCall__Inputs {
    return new RemoveBeneficiaryCall__Inputs(this);
  }

  get outputs(): RemoveBeneficiaryCall__Outputs {
    return new RemoveBeneficiaryCall__Outputs(this);
  }
}

export class RemoveBeneficiaryCall__Inputs {
  _call: RemoveBeneficiaryCall;

  constructor(call: RemoveBeneficiaryCall) {
    this._call = call;
  }

  get beneficiaryAddress_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveBeneficiaryCall__Outputs {
  _call: RemoveBeneficiaryCall;

  constructor(call: RemoveBeneficiaryCall) {
    this._call = call;
  }
}

export class RemoveManagerCall extends ethereum.Call {
  get inputs(): RemoveManagerCall__Inputs {
    return new RemoveManagerCall__Inputs(this);
  }

  get outputs(): RemoveManagerCall__Outputs {
    return new RemoveManagerCall__Outputs(this);
  }
}

export class RemoveManagerCall__Inputs {
  _call: RemoveManagerCall;

  constructor(call: RemoveManagerCall) {
    this._call = call;
  }

  get account_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveManagerCall__Outputs {
  _call: RemoveManagerCall;

  constructor(call: RemoveManagerCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RequestFundsCall extends ethereum.Call {
  get inputs(): RequestFundsCall__Inputs {
    return new RequestFundsCall__Inputs(this);
  }

  get outputs(): RequestFundsCall__Outputs {
    return new RequestFundsCall__Outputs(this);
  }
}

export class RequestFundsCall__Inputs {
  _call: RequestFundsCall;

  constructor(call: RequestFundsCall) {
    this._call = call;
  }
}

export class RequestFundsCall__Outputs {
  _call: RequestFundsCall;

  constructor(call: RequestFundsCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get token_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class UnlockBeneficiaryCall extends ethereum.Call {
  get inputs(): UnlockBeneficiaryCall__Inputs {
    return new UnlockBeneficiaryCall__Inputs(this);
  }

  get outputs(): UnlockBeneficiaryCall__Outputs {
    return new UnlockBeneficiaryCall__Outputs(this);
  }
}

export class UnlockBeneficiaryCall__Inputs {
  _call: UnlockBeneficiaryCall;

  constructor(call: UnlockBeneficiaryCall) {
    this._call = call;
  }

  get beneficiaryAddress_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnlockBeneficiaryCall__Outputs {
  _call: UnlockBeneficiaryCall;

  constructor(call: UnlockBeneficiaryCall) {
    this._call = call;
  }
}

export class UpdateBeneficiaryParamsCall extends ethereum.Call {
  get inputs(): UpdateBeneficiaryParamsCall__Inputs {
    return new UpdateBeneficiaryParamsCall__Inputs(this);
  }

  get outputs(): UpdateBeneficiaryParamsCall__Outputs {
    return new UpdateBeneficiaryParamsCall__Outputs(this);
  }
}

export class UpdateBeneficiaryParamsCall__Inputs {
  _call: UpdateBeneficiaryParamsCall;

  constructor(call: UpdateBeneficiaryParamsCall) {
    this._call = call;
  }

  get claimAmount_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get maxClaim_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get decreaseStep_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get baseInterval_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get incrementInterval_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class UpdateBeneficiaryParamsCall__Outputs {
  _call: UpdateBeneficiaryParamsCall;

  constructor(call: UpdateBeneficiaryParamsCall) {
    this._call = call;
  }
}

export class UpdateCommunityAdminCall extends ethereum.Call {
  get inputs(): UpdateCommunityAdminCall__Inputs {
    return new UpdateCommunityAdminCall__Inputs(this);
  }

  get outputs(): UpdateCommunityAdminCall__Outputs {
    return new UpdateCommunityAdminCall__Outputs(this);
  }
}

export class UpdateCommunityAdminCall__Inputs {
  _call: UpdateCommunityAdminCall;

  constructor(call: UpdateCommunityAdminCall) {
    this._call = call;
  }

  get newCommunityAdmin_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateCommunityAdminCall__Outputs {
  _call: UpdateCommunityAdminCall;

  constructor(call: UpdateCommunityAdminCall) {
    this._call = call;
  }
}

export class UpdateCommunityParamsCall extends ethereum.Call {
  get inputs(): UpdateCommunityParamsCall__Inputs {
    return new UpdateCommunityParamsCall__Inputs(this);
  }

  get outputs(): UpdateCommunityParamsCall__Outputs {
    return new UpdateCommunityParamsCall__Outputs(this);
  }
}

export class UpdateCommunityParamsCall__Inputs {
  _call: UpdateCommunityParamsCall;

  constructor(call: UpdateCommunityParamsCall) {
    this._call = call;
  }

  get minTranche_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get maxTranche_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateCommunityParamsCall__Outputs {
  _call: UpdateCommunityParamsCall;

  constructor(call: UpdateCommunityParamsCall) {
    this._call = call;
  }
}

export class UpdatePreviousCommunityCall extends ethereum.Call {
  get inputs(): UpdatePreviousCommunityCall__Inputs {
    return new UpdatePreviousCommunityCall__Inputs(this);
  }

  get outputs(): UpdatePreviousCommunityCall__Outputs {
    return new UpdatePreviousCommunityCall__Outputs(this);
  }
}

export class UpdatePreviousCommunityCall__Inputs {
  _call: UpdatePreviousCommunityCall;

  constructor(call: UpdatePreviousCommunityCall) {
    this._call = call;
  }

  get newPreviousCommunity_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdatePreviousCommunityCall__Outputs {
  _call: UpdatePreviousCommunityCall;

  constructor(call: UpdatePreviousCommunityCall) {
    this._call = call;
  }
}
